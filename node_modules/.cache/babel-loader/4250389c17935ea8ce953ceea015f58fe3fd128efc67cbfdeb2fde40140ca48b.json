{"ast":null,"code":"class Api {\n  constructor(config) {\n    this._baseUrl = config.baseUrl;\n    this._headers = config.headers;\n  }\n  _checkResponse(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Ошибка: ${res.status}`);\n  }\n  getInitialCards() {\n    return fetch(`${this._baseUrl}/cards`, {\n      headers: this._headers\n    }).then(res => this._checkResponse(res));\n  }\n  getUserInfo() {\n    return fetch(`${this._baseUrl}/users/me`, {\n      headers: this._headers\n    }).then(res => this._checkResponse(res));\n  }\n  setUserInfo(obj) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: obj.name,\n        about: obj.info\n      })\n    }).then(res => this._checkResponse(res));\n  }\n  addNewCard(cardElement) {\n    return fetch(`${this._baseUrl}/cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: cardElement.name,\n        link: cardElement.link\n      })\n    }).then(res => this._checkResponse(res));\n  }\n  putLike(cardId) {\n    return fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\n      method: 'PUT',\n      headers: this._headers\n    }).then(res => this._checkResponse(res));\n  }\n  deleteLike(cardId) {\n    return fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\n      method: 'DELETE',\n      headers: this._headers\n    }).then(res => this._checkResponse(res));\n  }\n  deleteCard(cardId) {\n    return fetch(`${this._baseUrl}/cards/${cardId}`, {\n      method: 'DELETE',\n      headers: this._headers\n    }).then(res => this._checkResponse(res));\n  }\n  changeAvatar(avatarLink) {\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: avatarLink\n      })\n    }).then(res => this._checkResponse(res));\n  }\n}\nconst api = new {\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-60',\n  headers: {\n    authorization: '21e5d188-24e1-4766-80db-4d144adb17d5',\n    'Content-Type': 'application/json'\n  }\n}();\nexport default api;","map":{"version":3,"names":["Api","constructor","config","_baseUrl","baseUrl","_headers","headers","_checkResponse","res","ok","json","Promise","reject","status","getInitialCards","fetch","then","getUserInfo","setUserInfo","obj","method","body","JSON","stringify","name","about","info","addNewCard","cardElement","link","putLike","cardId","deleteLike","deleteCard","changeAvatar","avatarLink","avatar","api","authorization"],"sources":["/Users/anastasia/dev/mesto-react/src/utils/Api.js"],"sourcesContent":["class Api {\n  constructor(config) {\n    this._baseUrl = config.baseUrl;\n    this._headers = config.headers;\n  }\n\n  _checkResponse(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Ошибка: ${res.status}`)\n  }\n\n  getInitialCards() {\n    return fetch(`${this._baseUrl}/cards`, {\n      headers: this._headers\n    })\n      .then(res => this._checkResponse(res));\n  }\n\n  getUserInfo() {\n    return fetch(`${this._baseUrl}/users/me`, {\n      headers: this._headers\n    })\n      .then(res => this._checkResponse(res));\n  }\n\n  setUserInfo(obj) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: obj.name,\n        about: obj.info\n      })\n    })\n      .then(res => this._checkResponse(res));\n  }\n\n  addNewCard(cardElement) {\n    return fetch(`${this._baseUrl}/cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: cardElement.name,\n        link: cardElement.link\n      })\n    })\n      .then(res => this._checkResponse(res));\n  }\n\n  putLike(cardId) {\n    return fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\n      method: 'PUT',\n      headers: this._headers\n    })\n      .then(res => this._checkResponse(res));\n  }\n\n  deleteLike(cardId) {\n    return fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\n      method: 'DELETE',\n      headers: this._headers\n    })\n      .then(res => this._checkResponse(res));\n  }\n\n  deleteCard(cardId) {\n    return fetch(`${this._baseUrl}/cards/${cardId}`, {\n      method: 'DELETE',\n      headers: this._headers\n    })\n      .then(res => this._checkResponse(res));\n  }\n\n  changeAvatar(avatarLink) {\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: avatarLink\n      })\n    })\n      .then(res => this._checkResponse(res));\n  }\n}\n\nconst api = new {\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-60',\n  headers: {\n    authorization: '21e5d188-24e1-4766-80db-4d144adb17d5',\n    'Content-Type': 'application/json'\n  }\n}\n\nexport default api;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}