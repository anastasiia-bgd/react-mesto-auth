{"ast":null,"code":"class Auth {\n  constructor(options) {\n    this._baseUrl = options.baseUrl;\n    this._headers = options.headers;\n  }\n  register(email, password) {\n    return fetch(`${this._baseUrl}/signup`, {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify({\n        email,\n        password\n      })\n    }).then(res => this._checkResponse(res));\n  }\n  authorize(email, password) {\n    return fetch(`${this._baseUrl}/signin`, {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify({\n        email,\n        password\n      })\n    }).then(res => this._checkResponse(res));\n  }\n  checkToken(token) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`\n      }\n    }).then(res => this._checkResponse(res));\n  }\n  _checkResponse(res) {\n    return res.ok ? res.json() : Promise.reject(`${res.status} ${res.statusText}`);\n  }\n}\nconst authApi = new AuthApi({\n  baseUrl: \"https://auth.nomoreparties.co\",\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n});\nexport default authApi;","map":{"version":3,"names":["Auth","constructor","options","_baseUrl","baseUrl","_headers","headers","register","email","password","fetch","method","body","JSON","stringify","then","res","_checkResponse","authorize","checkToken","token","Authorization","ok","json","Promise","reject","status","statusText","authApi","AuthApi"],"sources":["/Users/anastasia/dev/react-mesto-auth/src/utils/Auth.js"],"sourcesContent":["class Auth {\n  constructor(options) {\n      this._baseUrl = options.baseUrl\n      this._headers = options.headers\n  }\n\n  register(email, password) {\n      return fetch(`${this._baseUrl}/signup`, {\n          method: \"POST\",\n          headers: this._headers,\n          body: JSON.stringify({email, password}),\n      }).then(res => this._checkResponse(res));\n  }\n\n  authorize(email, password) {\n      return fetch(`${this._baseUrl}/signin`, {\n          method: \"POST\",\n          headers: this._headers,\n          body: JSON.stringify({email, password}),\n      }).then(res => this._checkResponse(res));\n  }\n\n  checkToken(token) {\n      return fetch(`${this._baseUrl}/users/me`, {\n          method: \"GET\",\n          headers: {\n              \"Content-Type\": \"application/json\",\n              Authorization: `Bearer ${token}`,\n          },\n      }).then(res => this._checkResponse(res));\n  }\n\n  _checkResponse(res) {\n      return res.ok\n          ? res.json()\n          : Promise.reject(`${res.status} ${res.statusText}`);\n  }\n}\n\nconst authApi = new AuthApi({\n  baseUrl: \"https://auth.nomoreparties.co\",\n  headers: {\n      \"Content-Type\": \"application/json\"\n  }\n});\n\nexport default authApi;"],"mappings":"AAAA,MAAMA,IAAI,CAAC;EACTC,WAAWA,CAACC,OAAO,EAAE;IACjB,IAAI,CAACC,QAAQ,GAAGD,OAAO,CAACE,OAAO;IAC/B,IAAI,CAACC,QAAQ,GAAGH,OAAO,CAACI,OAAO;EACnC;EAEAC,QAAQA,CAACC,KAAK,EAAEC,QAAQ,EAAE;IACtB,OAAOC,KAAK,CAAE,GAAE,IAAI,CAACP,QAAS,SAAQ,EAAE;MACpCQ,MAAM,EAAE,MAAM;MACdL,OAAO,EAAE,IAAI,CAACD,QAAQ;MACtBO,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAACN,KAAK;QAAEC;MAAQ,CAAC;IAC1C,CAAC,CAAC,CAACM,IAAI,CAACC,GAAG,IAAI,IAAI,CAACC,cAAc,CAACD,GAAG,CAAC,CAAC;EAC5C;EAEAE,SAASA,CAACV,KAAK,EAAEC,QAAQ,EAAE;IACvB,OAAOC,KAAK,CAAE,GAAE,IAAI,CAACP,QAAS,SAAQ,EAAE;MACpCQ,MAAM,EAAE,MAAM;MACdL,OAAO,EAAE,IAAI,CAACD,QAAQ;MACtBO,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAACN,KAAK;QAAEC;MAAQ,CAAC;IAC1C,CAAC,CAAC,CAACM,IAAI,CAACC,GAAG,IAAI,IAAI,CAACC,cAAc,CAACD,GAAG,CAAC,CAAC;EAC5C;EAEAG,UAAUA,CAACC,KAAK,EAAE;IACd,OAAOV,KAAK,CAAE,GAAE,IAAI,CAACP,QAAS,WAAU,EAAE;MACtCQ,MAAM,EAAE,KAAK;MACbL,OAAO,EAAE;QACL,cAAc,EAAE,kBAAkB;QAClCe,aAAa,EAAG,UAASD,KAAM;MACnC;IACJ,CAAC,CAAC,CAACL,IAAI,CAACC,GAAG,IAAI,IAAI,CAACC,cAAc,CAACD,GAAG,CAAC,CAAC;EAC5C;EAEAC,cAAcA,CAACD,GAAG,EAAE;IAChB,OAAOA,GAAG,CAACM,EAAE,GACPN,GAAG,CAACO,IAAI,EAAE,GACVC,OAAO,CAACC,MAAM,CAAE,GAAET,GAAG,CAACU,MAAO,IAAGV,GAAG,CAACW,UAAW,EAAC,CAAC;EAC3D;AACF;AAEA,MAAMC,OAAO,GAAG,IAAIC,OAAO,CAAC;EAC1BzB,OAAO,EAAE,+BAA+B;EACxCE,OAAO,EAAE;IACL,cAAc,EAAE;EACpB;AACF,CAAC,CAAC;AAEF,eAAesB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}